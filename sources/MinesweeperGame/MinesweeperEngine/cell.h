#ifndef CELL_H
#define CELL_H

/**
 * @brief The Cell class
 *
 * Класс, обозначающий одну клетку поля
 */

class Cell
{
public:
    /**
     * @brief Cell Конструктор класса
     * @param coord1 Первая координата клетки поля
     * @param coord2 Соответственно вторая координата
     */
    Cell(int coord1, int coord2);    
    int getX(); ///< Функция, возвращающая Х-овую координату данной клетки
    int getY(); ///< Функция, возвращающая Y-овую координату данной клетки
    /**
     * @brief isMine Функция, определяющая, является ли данная клетка миной
     * @return 1 - если в клетке мина, 0 - если нет
     */
    bool isMine();
    void setMine(); ///< Функция, устанавливающая мину в данную клетку
    /**
     * @brief isFlag Функция, проверяющая, установлен ли на клетке флаг
     * @return 1 - если флаг установлен, 0 - если нет
     */
    bool isFlag();
    /**
     * @brief getValue Функция, показывающая значение в клетке (сколько мин находится вокруг в радиусе 1 клетка)
     * @return Значение в клетке (value)
     */
    int getValue();
    /**
     * @brief incValue Увеличивает значение в данной клетке на 1
     */
    void incValue();
    void openCell(); ///< Открывает клетку
    void swapFlag(); ///< Инвертирует флаг в данной клетке
    /**
     * @brief isOpen Проверяет, открыта ли клетка
     * @return 1 - если открыта, 0 - если нет
     */
    bool isOpen();

protected:
    int x; ///< Х-овая координата клетки
    int y; ///< Y-овая координата клетки
    int value; ///< Значение клетки (сколько мин вокруг в радиусе 1 клетка)
    bool flag; ///< Флаг обозначающий установленный на мине флаг
    bool mine; ///< Флаг, показывающий мина это или нет
    bool open; ///< Флаг, показывающий, открыта клетка или нет

};

#endif // CELL_H
